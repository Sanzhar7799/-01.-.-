/* А) Ответим на вопросы и укажем соответствия между операциями в С и С++:

1) int *ptr = (int*)malloc(sizeof(int)) - в С++ для выделения динамической памяти используется оператор new. Таким образом, эквивалентное выражение будет int *ptr = new int;.
2) int *ptrArr = (int*)malloc(sizeof(int)*N) - в С++ для выделения динамического массива используется оператор new[]. Таким образом, эквивалентное выражение будет int *ptrArr = new int[N];.
3) free(ptr) - в С++ для освобождения динамической памяти, выделенной с помощью new, используется оператор delete. Таким образом, эквивалентное выражение будет delete ptr;.
4) free(ptrArr) - в С++ для освобождения динамического массива, выделенного с помощью new[], используется оператор delete[]. Таким образом, эквивалентное выражение будет delete[] ptrArr.

В С++ необходимо освобождать динамическую память с помощью операторов delete и delete[].
Если попытаться освободить одну и ту же выделенную память дважды, это приведет к неопределенному поведению программы.
Также, попытка освободить невыделенную память также может привести к проблемам.

Б) Теперь адаптируем программу для построения треугольника Фибоначчи на языке С, чтобы она соответствовала требованиям на языке С++.
 Для этого будем использовать указатели и динамическое выделение памяти. */


#include <iostream>
void printFibonacciTriangle(int n) {
    int **arr = new int*[n];

    for (int i = 0; i < n; i++) {
        arr[i] = new int[i + 1];
        arr[i][0] = 1;
        arr[i][i] = 1;

        for (int j = 1; j < i; j++) {
            arr[i][j] = arr[i - 1][j - 1] + arr[i - 1][j];
        }
    }

    for (int i = 0; i < n; i++) {
        for (int j = 0; j <= i; j++) {
            std::cout << arr[i][j] << " ";
        }
        std::cout << std::endl;
    }

    for (int i = 0; i < n; i++) {
        delete[] arr[i];
    }
    delete[] arr;
}

int main() {
    int n;
    std::cout << "Введите количество строк для треугольника Фибоначчи: ";
    std::cin >> n;

    printFibonacciTriangle(n);

    return 0;
}
/*Эта программа с помощью указателей и динамического выделения памяти строит треугольник Фибоначчи и выводит его на экран. 
Пользователь может задать количество строк для треугольника.